type ServiceEntry {
  identifier: String
}

type Person {
  # The name of the user, only the first character of the last name is displayed.
  name: String!
  # The bio of the user.
  bio(
    # The maximum number of characters (include ...) to retrieve. Will always return at least 3 characters.
    size: Int
  ): String
  status: String
  localizedCountryName: String @deprecated(reason: "Use `country`.")
  country: String
  city: String
  photo: Photo
  twitter: Twitter
  facebook: ServiceEntry
}

input PersonInput {
  name: String!
  bio: String!
  photoUrl: String
}

type Subscription {
  personAdded: Person
}

type Query {
  person(name: String!): Person
  persons(
    # The number of persons to retrieve.
    limit: Int
    # The offset in persons to retrieve.
    offset: Int
  ): [Person]!
}

type Mutation {
  addPerson(input: PersonInput): Person
}
